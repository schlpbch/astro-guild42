---
import { type CollectionEntry, getCollection } from "astro:content";
import TopicPosts from "@layouts/TopicEvents.astro";
import getUniqueTopics from "@utils/getUniqueTopics";
import getPostsByTopic from "@utils/getEventsByTopic";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  post: CollectionEntry<"events">;
  topic: string;
  topicName: string;
}

export async function getStaticPaths() {
  const events = await getCollection("events");

  const topics = getUniqueTopics(events);

  return topics.flatMap(({ topic, topicName }) => {
    const topicPosts = getPostsByTopic(events, topic);
    const totalPages = getPageNumbers(topicPosts.length);

    return totalPages.map(page => ({
      params: { topic, page },
      props: { topic, topicName },
    }));
  });
}

const { page } = Astro.params;
const { topic, topicName } = Astro.props;

const posts = await getCollection("events", ({ data }) => !data.draft);

const eventsByTopic = getPostsByTopic(posts, topic);

const pagination = getPagination({
  posts: eventsByTopic,
  page,
});
---

<TopicPosts {...pagination} {topic} {topicName} />
